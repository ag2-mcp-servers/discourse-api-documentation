# generated by fastapi-codegen:
#   filename:  openapi.yaml
#   timestamp: 2025-06-28T18:33:14+00:00

from __future__ import annotations

from typing import List, Optional

from pydantic import BaseModel, ConfigDict


class Poster(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    description: str
    extras: str
    primary_group_id: Optional[str] = None
    user_id: int


class Topic(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    archetype: str
    archived: bool
    bookmarked: Optional[str] = None
    bumped: bool
    bumped_at: str
    category_id: int
    closed: bool
    created_at: str
    excerpt: str
    fancy_title: str
    featured_link: Optional[str] = None
    has_summary: bool
    highest_post_number: int
    id: int
    image_url: Optional[str] = None
    last_posted_at: str
    last_poster_username: str
    like_count: int
    liked: Optional[str] = None
    pinned: bool
    pinned_globally: bool
    posters: List[Poster]
    posts_count: int
    reply_count: int
    slug: str
    title: str
    unpinned: Optional[str] = None
    unseen: bool
    views: int
    visible: bool


class TopicList(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    can_create_topic: bool
    per_page: int
    top_tags: Optional[List] = None
    topics: List[Topic]


class User(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    avatar_template: str
    id: int
    name: str
    username: str


class JsonGetResponse(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    primary_groups: Optional[List] = None
    topic_list: TopicList
    users: Optional[List[User]] = None
