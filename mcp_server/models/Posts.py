# generated by fastapi-codegen:
#   filename:  openapi.yaml
#   timestamp: 2025-06-28T18:33:14+00:00

from __future__ import annotations

from typing import List, Optional

from pydantic import BaseModel, ConfigDict, Field


class ActionsSummaryItem(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    can_act: Optional[bool] = None
    id: Optional[int] = None


class LatestPost(BaseModel):
    actions_summary: Optional[List[ActionsSummaryItem]] = None
    admin: Optional[bool] = None
    avatar_template: Optional[str] = None
    can_delete: Optional[bool] = None
    can_edit: Optional[bool] = None
    can_recover: Optional[bool] = None
    can_view_edit_history: Optional[bool] = None
    can_wiki: Optional[bool] = None
    category_id: Optional[int] = None
    cooked: Optional[str] = None
    created_at: Optional[str] = None
    deleted_at: Optional[str] = None
    display_username: Optional[str] = None
    edit_reason: Optional[str] = None
    flair_bg_color: Optional[str] = None
    flair_color: Optional[str] = None
    flair_name: Optional[str] = None
    flair_url: Optional[str] = None
    hidden: Optional[bool] = None
    id: Optional[int] = None
    incoming_link_count: Optional[int] = None
    moderator: Optional[bool] = None
    name: Optional[str] = None
    post_number: Optional[int] = None
    post_type: Optional[int] = None
    primary_group_name: Optional[str] = None
    quote_count: Optional[int] = None
    raw: Optional[str] = None
    readers_count: Optional[int] = None
    reads: Optional[int] = None
    reply_count: Optional[int] = None
    reply_to_post_number: Optional[str] = None
    reviewable_id: Optional[str] = None
    reviewable_score_count: Optional[int] = None
    reviewable_score_pending_count: Optional[int] = None
    score: Optional[float] = None
    staff: Optional[bool] = None
    topic_html_title: Optional[str] = None
    topic_id: Optional[int] = None
    topic_slug: Optional[str] = None
    topic_title: Optional[str] = None
    trust_level: Optional[int] = None
    updated_at: Optional[str] = None
    user_deleted: Optional[bool] = None
    user_id: Optional[int] = None
    user_title: Optional[str] = None
    username: Optional[str] = None
    version: Optional[int] = None
    wiki: Optional[bool] = None
    yours: Optional[bool] = None


class JsonGetResponse(BaseModel):
    latest_posts: Optional[List[LatestPost]] = None


class JsonPostRequest(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    archetype: Optional[str] = Field(
        None,
        description='Required for new private message.',
        examples=['private_message'],
    )
    category: Optional[int] = Field(
        None,
        description='Optional if creating a new topic, and ignored if creating\na new post.',
    )
    created_at: Optional[str] = None
    embed_url: Optional[str] = Field(
        None,
        description='Provide a URL from a remote system to associate a forum\ntopic with that URL, typically for using Discourse as a comments\nsystem for an external blog.',
    )
    external_id: Optional[str] = Field(
        None,
        description='Provide an external_id from a remote system to associate\na forum topic with that id.',
    )
    raw: str
    target_recipients: Optional[str] = Field(
        None,
        description='Required for private message, comma separated.',
        examples=['blake,sam'],
    )
    target_usernames: Optional[str] = Field(
        None, description='Deprecated. Use target_recipients instead.'
    )
    title: Optional[str] = Field(
        None, description='Required if creating a new topic or new private message.'
    )
    topic_id: Optional[int] = Field(
        None, description='Required if creating a new post.'
    )


class ActionsSummaryItemModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    can_act: bool
    id: int


class JsonPostResponse(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    actions_summary: List[ActionsSummaryItemModel]
    admin: bool
    avatar_template: str
    bookmarked: bool
    can_delete: bool
    can_edit: bool
    can_recover: bool
    can_view_edit_history: bool
    can_wiki: bool
    cooked: str
    created_at: str
    deleted_at: Optional[str] = None
    display_username: Optional[str] = None
    draft_sequence: int
    edit_reason: Optional[str] = None
    flair_bg_color: Optional[str] = None
    flair_color: Optional[str] = None
    flair_name: Optional[str] = None
    flair_url: Optional[str] = None
    hidden: bool
    id: int
    incoming_link_count: int
    mentioned_users: Optional[List] = None
    moderator: bool
    name: Optional[str] = None
    post_number: int
    post_type: int
    primary_group_name: Optional[str] = None
    quote_count: int
    raw: Optional[str] = None
    readers_count: int
    reads: int
    reply_count: int
    reply_to_post_number: Optional[str] = None
    reviewable_id: Optional[str] = None
    reviewable_score_count: int
    reviewable_score_pending_count: int
    score: int
    staff: bool
    topic_id: int
    topic_slug: str
    trust_level: int
    updated_at: str
    user_deleted: bool
    user_id: int
    user_title: Optional[str] = None
    username: str
    version: int
    wiki: bool
    yours: bool
