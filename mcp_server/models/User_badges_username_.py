# generated by fastapi-codegen:
#   filename:  openapi.yaml
#   timestamp: 2025-06-28T18:33:14+00:00

from __future__ import annotations

from typing import List, Optional

from pydantic import BaseModel, ConfigDict


class BadgeType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    id: int
    name: str
    sort_order: int


class Badge(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    allow_title: bool
    badge_grouping_id: int
    badge_type_id: int
    description: str
    enabled: bool
    grant_count: int
    icon: str
    id: int
    image_url: Optional[str] = None
    listable: bool
    manually_grantable: bool
    multiple_grant: bool
    name: str
    slug: str
    system: bool


class GrantedBy(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    admin: bool
    avatar_template: str
    flair_name: Optional[str] = None
    id: int
    moderator: bool
    name: str
    trust_level: int
    username: str


class UserBadge(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    badge_id: int
    can_favorite: bool
    granted_at: str
    granted_by_id: int
    grouping_position: int
    id: int
    is_favorite: Optional[str] = None


class JsonGetResponse(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    badge_types: Optional[List[BadgeType]] = None
    badges: Optional[List[Badge]] = None
    granted_bies: Optional[List[GrantedBy]] = None
    user_badges: List[UserBadge]
