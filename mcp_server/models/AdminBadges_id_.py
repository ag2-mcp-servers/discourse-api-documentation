# generated by fastapi-codegen:
#   filename:  openapi.yaml
#   timestamp: 2025-06-28T18:33:14+00:00

from __future__ import annotations

from typing import List, Optional

from pydantic import BaseModel, ConfigDict, Field


class JsonPutRequest(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    badge_type_id: int = Field(
        ...,
        description='The ID for the badge type. 1 for Gold, 2 for Silver,\n3 for Bronze.',
    )
    name: str = Field(..., description='The name for the new badge.')


class Badge(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    allow_title: bool
    auto_revoke: bool
    badge_grouping_id: int
    badge_type_id: int
    description: str
    enabled: bool
    grant_count: int
    icon: str
    id: int
    image_url: Optional[str] = None
    listable: bool
    long_description: str
    manually_grantable: bool
    multiple_grant: bool
    name: str
    query: Optional[str] = None
    show_posts: bool
    slug: str
    system: bool
    target_posts: bool
    trigger: Optional[str] = None


class BadgeType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    id: int
    name: str
    sort_order: int


class JsonPutResponse(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    badge: Badge
    badge_types: List[BadgeType]
